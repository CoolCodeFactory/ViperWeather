//
//  AddInteractor.swift
//  Architecture
//
//  Created Dmitri Utmanov on 19/02/16.
//  Copyright Â© 2016 Dmitriy Utmanov. All rights reserved.
//
//  Generated by Swift-Viper templates. Find latest version at https://github.com/Nikita2k/SwiftViper
//

import Foundation


protocol AddInteractorInputProtocol: class {
    
    weak var presenter: AddInteractorOutputProtocol! { get set }

    func getCitiesWithName(name: String)
    func saveCity(city: City)
}

protocol AddInteractorOutputProtocol: class {
   
    func foundCities(cities: [City])
}

class AddInteractor {

    weak var presenter: AddInteractorOutputProtocol!
    
    var dataManager: AddDataManagerInputProtocol!
}

extension AddInteractor: AddInteractorInputProtocol {
    
    func getCitiesWithName(name: String) {
        self.dataManager.fetchCitiesWithName(name) { [weak self] (cities) -> () in
            self?.presenter.foundCities(cities)
        }
    }
    
    func saveCity(city: City) {
        self.dataManager.saveCityToPersistentStore(city)
    }
}

extension AddInteractor: AddDataManagerOutputProtocol {
    
}